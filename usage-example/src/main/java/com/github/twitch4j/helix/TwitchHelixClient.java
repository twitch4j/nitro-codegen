/*
 * Twitch - Helix
 *
 * The new Twitch API provides the tools and data used to develop integrations with Twitch. The data models and systems are designed to provide relevant data in an easy, consistent, and reliable way.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * License: [https://github.com/twitch4j/twitch4j/blob/master/LICENSE](Unlicense)
 *
 * NOTE: This class is auto generated by a custom OpenAPI Generator.
 * Do not edit the class manually.
 */
package com.github.twitch4j.helix;

import com.github.twitch4j.helix.api.TwitchHelix;
import feign.Logger;
import feign.RequestInterceptor;
import feign.http2client.Http2Client;
import feign.jackson.JacksonDecoder;
import feign.jackson.JacksonEncoder;
import feign.slf4j.Slf4jLogger;
import io.github.resilience4j.feign.FeignDecorators;
import io.github.resilience4j.feign.Resilience4jFeign;
import org.jetbrains.annotations.NotNull;

import javax.annotation.processing.Generated;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.function.Consumer;

@Generated(value = "com.github.twitch4j.codegen.java.feign.JavaFeignGenerator", date = "2021-09-27T15:18:20.406719600+02:00[Europe/Berlin]")
public class TwitchHelixClient {

    public static TwitchHelix create(Consumer<TwitchHelixClientSpec> consumerSpec) {
        // spec
        TwitchHelixClientSpec spec = new TwitchHelixClientSpec();
        consumerSpec.accept(spec);
        spec.validate();

        // interceptors
        List<RequestInterceptor> requestInterceptors = new ArrayList<>();

        // decorators
        FeignDecorators decorators = FeignDecorators.builder().build();

        // construct client
        return Resilience4jFeign.builder(decorators)
                .logger(new Slf4jLogger())
                .encoder(new JacksonEncoder())
                .decoder(new JacksonDecoder())
                .client(new Http2Client())
                .requestInterceptors(requestInterceptors)
                .logLevel(spec.loglevel)
                .target(TwitchHelix.class, spec.baseUrl);
    }

    public static class TwitchHelixClientSpec {

        protected String baseUrl = "https://api.twitch.tv/helix";
        protected Logger.Level loglevel = Logger.Level.NONE;

        public void validate() {
            Objects.requireNonNull(baseUrl, "baseUrl is a required parameter!");
        }

        public TwitchHelixClientSpec baseUrl(@NotNull String baseUrl) {
            this.baseUrl = baseUrl;
            return this;
        }

        public TwitchHelixClientSpec loglevel(@NotNull Logger.Level loglevel) {
            this.loglevel = loglevel;
            return this;
        }
    }
}
